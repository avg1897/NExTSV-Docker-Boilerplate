version: "3.3"

services:
  server:
    container_name: ${API_CONTAINER_NAME}
    restart: unless-stopped
    build:
      context: ./api
      target: build-stage
    volumes:
      - ./api:/app/server
    environment:
      - MYSQL_DATABASE=${MYSQL_DB_NAME}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASS=${MYSQL_PASS}
    ports:
      - "5000:5000"
    depends_on:
      - mysql_db

  mysql_db:
    image: mysql:8
    restart: unless-stopped
    container_name: ${MYSQL_CONTAINER_NAME}
    environment:
      - MYSQL_DATABASE=${MYSQL_DB_NAME}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASS}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASS}
    ports:
      - '3306:3306'
    expose:
      - '3306'
    volumes:
      - database:/var/lib/mysql

  frontend:
    image: nginx:stable-alpine
    container_name: ${FRONTEND_CONTAINER_NAME}
    volumes:
    - ./frontend/dist:/usr/share/nginx/html:ro
    - ./frontend/nginx.conf:/etc/nginx/nginx.conf
    #- ./frontend/logs:/var/log/nginx
    command: sh -c "nginx -g 'daemon off;'"
    ports:
      - 80:80
    depends_on:
      - server

volumes:
  database:

